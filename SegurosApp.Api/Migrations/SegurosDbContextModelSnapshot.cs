// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SegurosApp.Infrastructure;

#nullable disable

namespace SegurosApp.Api.Migrations
{
    [DbContext(typeof(SegurosDbContext))]
    partial class SegurosDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SegurosApp.Api.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"));

                    b.Property<int>("Activo")
                        .HasColumnType("int");

                    b.Property<string>("Apellido1Cliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Apellido2Cliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DniCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaDesactivado")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("SegurosApp.Api.Models.CondicionadoPoliza", b =>
                {
                    b.Property<int>("CondicionadoPolizaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CondicionadoPolizaId"));

                    b.Property<int>("Activo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaDesactivado")
                        .HasColumnType("datetime2");

                    b.Property<string>("Garantias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoCondicionado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CondicionadoPolizaId");

                    b.ToTable("CondicionadoPolizas");
                });

            modelBuilder.Entity("SegurosApp.Api.Models.GestionPoliza", b =>
                {
                    b.Property<int>("GestionPolizaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GestionPolizaId"));

                    b.Property<int>("CondicionadoPolizaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaGestion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("MarcaVehiculo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModeloVehiculo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PolizaId")
                        .HasColumnType("int");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.Property<int>("TipoGestionId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("GestionPolizaId");

                    b.HasIndex("CondicionadoPolizaId");

                    b.HasIndex("PolizaId");

                    b.HasIndex("TipoGestionId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("GestionPolizas");
                });

            modelBuilder.Entity("SegurosApp.Api.Models.Modulo", b =>
                {
                    b.Property<int>("ModuloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModuloId"));

                    b.Property<string>("NombreModulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ModuloId");

                    b.ToTable("Modulos");
                });

            modelBuilder.Entity("SegurosApp.Api.Models.Permiso", b =>
                {
                    b.Property<int>("PermisoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PermisoId"));

                    b.Property<int>("ModuloId")
                        .HasColumnType("int");

                    b.Property<string>("NombrePermiso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PermisoId");

                    b.HasIndex("ModuloId");

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("SegurosApp.Api.Models.Poliza", b =>
                {
                    b.Property<int>("PolizaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PolizaId"));

                    b.Property<int>("Activo")
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaDesactivado")
                        .HasColumnType("datetime2");

                    b.HasKey("PolizaId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Polizas");
                });

            modelBuilder.Entity("SegurosApp.Api.Models.Rol", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolId"));

                    b.Property<int>("Activo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaDesactivado")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RolId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SegurosApp.Api.Models.RolPermiso", b =>
                {
                    b.Property<int>("RolPermisoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolPermisoId"));

                    b.Property<int>("PermisoId")
                        .HasColumnType("int");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("RolPermisoId");

                    b.HasIndex("PermisoId");

                    b.HasIndex("RolId");

                    b.ToTable("RolPermisos");
                });

            modelBuilder.Entity("SegurosApp.Api.Models.TipoGestion", b =>
                {
                    b.Property<int>("TipoGestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoGestionId"));

                    b.Property<string>("NombreGestion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoGestionId");

                    b.ToTable("TipoGestiones");
                });

            modelBuilder.Entity("SegurosApp.Api.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<int>("Activo")
                        .HasColumnType("int");

                    b.Property<string>("Apellido1Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Apellido2Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DniUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId");

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("SegurosApp.Api.Models.GestionPoliza", b =>
                {
                    b.HasOne("SegurosApp.Api.Models.CondicionadoPoliza", "CondicionadoPoliza")
                        .WithMany("GestionPolizas")
                        .HasForeignKey("CondicionadoPolizaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SegurosApp.Api.Models.Poliza", "Poliza")
                        .WithMany("GestionPolizas")
                        .HasForeignKey("PolizaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SegurosApp.Api.Models.TipoGestion", "TipoGestion")
                        .WithMany("GestionPolizas")
                        .HasForeignKey("TipoGestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SegurosApp.Api.Models.Usuario", "Usuario")
                        .WithMany("GestionPolizas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CondicionadoPoliza");

                    b.Navigation("Poliza");

                    b.Navigation("TipoGestion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SegurosApp.Api.Models.Permiso", b =>
                {
                    b.HasOne("SegurosApp.Api.Models.Modulo", "Modulo")
                        .WithMany("Permisos")
                        .HasForeignKey("ModuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Modulo");
                });

            modelBuilder.Entity("SegurosApp.Api.Models.Poliza", b =>
                {
                    b.HasOne("SegurosApp.Api.Models.Cliente", "Cliente")
                        .WithMany("Polizas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("SegurosApp.Api.Models.RolPermiso", b =>
                {
                    b.HasOne("SegurosApp.Api.Models.Permiso", "Permiso")
                        .WithMany("RolPermisos")
                        .HasForeignKey("PermisoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SegurosApp.Api.Models.Rol", "Rol")
                        .WithMany("RolPermisos")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permiso");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("SegurosApp.Api.Models.Usuario", b =>
                {
                    b.HasOne("SegurosApp.Api.Models.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("SegurosApp.Api.Models.Cliente", b =>
                {
                    b.Navigation("Polizas");
                });

            modelBuilder.Entity("SegurosApp.Api.Models.CondicionadoPoliza", b =>
                {
                    b.Navigation("GestionPolizas");
                });

            modelBuilder.Entity("SegurosApp.Api.Models.Modulo", b =>
                {
                    b.Navigation("Permisos");
                });

            modelBuilder.Entity("SegurosApp.Api.Models.Permiso", b =>
                {
                    b.Navigation("RolPermisos");
                });

            modelBuilder.Entity("SegurosApp.Api.Models.Poliza", b =>
                {
                    b.Navigation("GestionPolizas");
                });

            modelBuilder.Entity("SegurosApp.Api.Models.Rol", b =>
                {
                    b.Navigation("RolPermisos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("SegurosApp.Api.Models.TipoGestion", b =>
                {
                    b.Navigation("GestionPolizas");
                });

            modelBuilder.Entity("SegurosApp.Api.Models.Usuario", b =>
                {
                    b.Navigation("GestionPolizas");
                });
#pragma warning restore 612, 618
        }
    }
}
